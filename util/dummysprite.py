#!/usr/bin/env python

import numpy as np
import sys

numbers = [
    [
        0b00111100,
        0b01000010,
        0b01000010,
        0b01000010,
        0b01000010,
        0b00111100
    ],
    [
        0b00001000,
        0b00011000,
        0b00001000,
        0b00001000,
        0b00001000,
        0b00011100
    ],
    [
        0b00111100,
        0b01000010,
        0b00000010,
        0b00001100,
        0b00110000,
        0b01111110
    ],
    [
        0b00111100,
        0b01000010,
        0b00001100,
        0b00000010,
        0b01000010,
        0b00111100
    ],
    [
        0b01000100,
        0b01000100,
        0b01111110,
        0b00000100,
        0b00000100,
        0b00000100
    ],
    [
        0b01111110,
        0b01000000,
        0b01111100,
        0b00000010,
        0b01000010,
        0b00111100
    ],
    [
        0b00111100,
        0b01000000,
        0b01011100,
        0b01100010,
        0b01000010,
        0b00111100
    ],
    [
        0b01111110,
        0b00000010,
        0b00001100,
        0b00000110,
        0b00001000,
        0b00001000
    ],
    [
        0b00111100,
        0b01000010,
        0b00111100,
        0b01000010,
        0b01000010,
        0b00111100
    ],
    [
        0b00111100,
        0b01000010,
        0b00111110,
        0b00000010,
        0b00000010,
        0b00111100
    ],
    [
        0b00111100,
        0b01000010,
        0b01111110,
        0b01000010,
        0b01000010,
        0b01000010
    ],
    [
        0b01111100,
        0b01000010,
        0b01111100,
        0b01000010,
        0b01000010,
        0b01111100
    ],
    [
        0b00111100,
        0b01000010,
        0b01000000,
        0b01000000,
        0b01000010,
        0b00111100
    ],
]

# sprite file bytes, starting with lo,hi addres
data = [0x00, 0x68] + [0] * (12*8*64)

# iterate over image pixels
for x in range(12*16):
    for y in range(11*16):
        spriteid  = x // 24
        spriterow = y % 21
        spritecol = (x % 24) // 8
        bit = 7 - (x % 8)
        base = y // 16
        mem = 2 + (base * 8 + spriteid) * 64 + spriterow * 3 + spritecol;

        # c = (x+y) % 5
        # if c < 2 :
        #   data[mem] += 1 << bit

        xx = x // 16
        yy = y // 16
        c = (xx + yy) % 2
        text = False
        if y % 16 >=5 and y % 16 < 11:
            line = (y % 16) - 5
            num = xx
            if (x % 16) // 8 > 0:
                num = yy
            text = (numbers[num][line] & (1 << (7- x % 8))) != 0

        if (c == 0) != text :
          data[mem] += 1 << bit

with open(sys.argv[1], 'wb') as f :
  f.write(bytearray(data))
